{"version":3,"sources":["api/config.ts","components/BackArrow/index.tsx","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","api/utils-api.ts","pages/create-customer.tsx","hooks/create-customer.ts"],"names":["portfolioApi","Axios","create","baseURL","BackArrow","to","className","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","getAllCities","a","get","data","getAllCompanies","CreateCustomer","useState","cities","setCities","companies","setCompanies","customer","setCustomer","alterField","useCallback","e","draft","name","useEffect","Promise","all","then","catch","console","error","useCreateCustomer","action","method","onSubmit","data-testid","htmlFor","type","id","first_name","onChange","last_name","map","titulation"],"mappings":"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","file":"static/js/6.545ff777.chunk.js","sourcesContent":["import Axios from 'axios';\n\nexport const portfolioApi = Axios.create({\n  baseURL: 'http://localhost:8080'\n});\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const BackArrow = ({to}: {to: string}) => (\n  <Link to={to}>\n    <small className=\"text-indigo-400\"> &larr; voltar </small> &nbsp;\n  </Link>\n);\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { City, Company } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const getAllCities = async () => {\n  const {data} = await portfolioApi.get<City[]>('/city');\n  return data;\n};\n\nexport const getAllCompanies = async () => {\n  const {data} = await portfolioApi.get<Company[]>('/company');\n  return data;\n};\n","import { useCreateCustomer } from 'hooks/create-customer';\nimport React from 'react';\nimport { BackArrow } from '../components/BackArrow';\n\nconst CreateCustomer = () => {\n  const {\n    customer,\n    alterField,\n    cities,\n    companies } = useCreateCustomer();\n  return (\n    <>\n      <h2>\n        <BackArrow to={'/'}/>\n        Criar cliente\n      </h2>\n      <div className=\"px-2 mx-auto max-w-sm\">\n        <form action=\"/customer\" method=\"post\" className=\"grid grid-flow-row\" onSubmit={()=>false}>\n          <div data-testid=\"first_name-container\">\n            <label htmlFor=\"first_name\">Primeiro nome:</label>\n            <input\n              type=\"text\"\n              name=\"first_name\"\n              id=\"first_name\"\n              value={customer.first_name}\n              onChange={alterField}\n            />\n          </div>\n          <div data-testid=\"last_name-container\">\n            <label htmlFor=\"last_name\">Segundo nome:</label>\n            <input\n              type=\"text\"\n              name=\"last_name\"\n              id=\"last_name\"\n              value={customer.last_name}\n              onChange={alterField}\n            />\n          </div>\n          <div data-testid=\"city-container\">\n            <label htmlFor=\"city\">Cidade: </label>\n            <select onChange={alterField} name=\"city\" id=\"city\">\n              <option value=\"0\">Selecione uma cidade</option>\n              {cities.map(i=>(\n                <option key={i.id} value={i.id}>{i.name}</option>\n              ))}\n            </select>\n          </div>\n          <div data-testid=\"company-container\">\n            <label htmlFor=\"company\">Empresa: </label>\n            <select onChange={alterField} name=\"company\" id=\"company\">\n              <option value=\"0\">Selecione uma empresa</option>\n              {companies.map(i=>(\n                <option key={i.id} value={i.id}>{i.name}</option>\n              ))}\n            </select>\n          </div>\n          <div data-testid=\"titulation-container\">\n            <label htmlFor=\"titulation\">Titulação:</label>\n            <input\n              type=\"text\"\n              name=\"titulation\"\n              id=\"titulation\"\n              value={customer.titulation}\n              onChange={alterField}\n            />\n          </div>\n          <div data-testid=\"gender-container\">\n            <label htmlFor=\"gender\">Gênero:</label>\n            <div className=\"flex flex-col\">\n              <label htmlFor=\"male\">\n                <input\n                  type=\"radio\"\n                  name=\"gender\"\n                  id=\"male\"\n                  value=\"male\"\n                />&nbsp;\n                Masculino\n              </label>\n              <label htmlFor=\"female\">\n                <input\n                  type=\"radio\"\n                  name=\"gender\"\n                  id=\"female\"\n                  value=\"female\"\n                />&nbsp;\n                Feminino\n              </label>\n              <label htmlFor=\"uninformed\">\n                <input\n                  type=\"radio\"\n                  name=\"gender\"\n                  id=\"uninformed\"\n                  value=\"uninformed\"\n                />&nbsp;\n                Não informar\n              </label>\n            </div>\n          </div>\n          <div data-testid=\"submit-container\">\n            <button className=\"submit\" type=\"submit\">\n              Criar\n            </button>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default CreateCustomer;\n","import { getAllCities, getAllCompanies } from 'api/utils-api';\nimport { City, Company, CustomerDTO } from 'portfolio-domain';\nimport React, { useCallback, useEffect, useState } from 'react';\n\ntype Event = React.ChangeEvent<HTMLInputElement|HTMLSelectElement>;\n\nexport const useCreateCustomer = () => {\n  const [cities, setCities] = useState([] as City[]);\n  const [companies, setCompanies] = useState([] as Company[]);\n  const [customer, setCustomer] = useState({} as CustomerDTO);\n\n  const alterField = useCallback((e: Event) => {\n    const draft = {...customer} as Record<string, unknown>;\n    draft[e.target.name] = e.target.value;\n    setCustomer(draft as CustomerDTO);\n  }, [customer]);\n\n  useEffect(() => {\n    Promise.all([getAllCities(), getAllCompanies()])\n      .then(e=> {\n        setCities(e[0]);\n        setCompanies(e[1]);\n      })\n      .catch(console.error);\n  }, []);\n\n  return {\n    alterField,\n    customer,\n    cities,\n    companies\n  };\n};\n"],"sourceRoot":""}