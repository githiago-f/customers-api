{"version":3,"sources":["pages/edit-customer.tsx","hooks/customer-by-id.ts","api/config.ts","api/customers-api.ts","components/BackArrow/index.tsx","api/utils-api.ts"],"names":["EditCustomer","id","useRouteMatch","params","useState","loading","setLoading","cities","setCities","companies","setCompanies","customer","setCustomer","error","setError","alterField","useCallback","e","draft","target","name","value","useEffect","Promise","all","getAllCities","getAllCompanies","customerById","then","catch","console","finally","update","preventDefault","updateCustomer","status","data","window","location","href","log","test","message","useLoadCustomerById","hidden","Loading","BackArrow","to","email","className","action","method","onSubmit","data-testid","htmlFor","type","defaultValue","first_name","onChange","last_name","city","map","i","company","titulation","gender","onClick","isProduction","process","hosts","PRODUCTION_URL","DEVELOPMENT_URL","portfolioApi","Axios","create","baseURL","customersGroupedByCity","a","get","customerId","customersByCity","city_id","page","createCustomer","post","patch"],"mappings":"kLAgJeA,UA3IM,WACnB,MCOiC,WACjC,IAAeC,EAAOC,cAAfC,OAAQF,GACf,EAA8BG,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAA0BR,mBAAS,MAAnC,mBAAOS,EAAP,KAAcC,EAAd,KAEMC,EAAaC,uBAAY,SAACC,GAC9B,IAAMC,EAAK,eAAOP,GAClBO,EAAMD,EAAEE,OAAOC,MAAQH,EAAEE,OAAOE,MAChCT,EAAYM,KACX,CAACP,IAEJW,qBAAU,WACRC,QAAQC,IAAI,CACVC,cACAC,cACAC,YAAa1B,KAEZ2B,MAAK,SAAAX,GACJT,EAAUS,EAAE,IACZP,EAAaO,EAAE,IACfL,EAAYK,EAAE,OAEfY,MAAMC,QAAQjB,OACdkB,SAAQ,kBAAIzB,GAAW,QACzB,IAEH,IAAM0B,EAAShB,uBAAY,SAACC,GAC1BA,EAAEgB,iBACFC,YAAevB,GACZiB,MAAK,YAAqB,IAAnBO,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,KACA,MAAXD,EAIHrB,EAASsB,GAHPC,OAAOC,SAASC,KAAO,oBAK1BV,OAAM,SAAAZ,GACLa,QAAQU,IAAI7B,GACT,MAAM8B,KAAKxB,EAAEyB,UACd5B,EAAS,CACP4B,QAAS,yCAIhB,CAAC/B,IAEJ,MAAO,CACLA,WACAN,UACAU,aACAN,YACAF,SACAM,QACAmB,UDvDEW,GAPFhC,EADF,EACEA,SACAI,EAFF,EAEEA,WACAR,EAHF,EAGEA,OACAM,EAJF,EAIEA,MACAR,EALF,EAKEA,QACAI,EANF,EAMEA,UACAuB,EAPF,EAOEA,OAGF,OACE,qCACE,qBAAKY,QAASvC,EAAd,SACE,cAACwC,EAAA,EAAD,MAEF,sBAAKD,OAAQvC,EAAb,UACE,+BACE,cAACyC,EAAA,EAAD,CAAWC,GAAI,MADjB,kBAEkBpC,EAASqC,OAAO,MAElC,qBAAKC,UAAU,8BAAf,SACE,uBAAMC,OAAO,YAAYC,OAAO,OAAOF,UAAU,qBAAqBG,SAAU,kBAAI,GAApF,UACE,sBAAKC,cAAY,uBAAjB,UACE,uBAAOC,QAAQ,aAAf,4BACA,uBACEC,KAAK,OACLnC,KAAK,aACLnB,GAAG,aACHuD,aAAc7C,EAAS8C,WACvBC,SAAU3C,OAGd,sBAAKsC,cAAY,sBAAjB,UACE,uBAAOC,QAAQ,YAAf,2BACA,uBACEC,KAAK,OACLnC,KAAK,YACLnB,GAAG,YACHuD,aAAc7C,EAASgD,UACvBD,SAAU3C,OAGd,sBAAKsC,cAAY,kBAAjB,UACE,uBAAOC,QAAQ,QAAf,qBACA,uBACEC,KAAK,OACLnC,KAAK,QACLnB,GAAG,QACHuD,aAAc7C,EAASqC,MACvBU,SAAU3C,OAGd,sBAAKsC,cAAY,iBAAjB,UACE,uBAAOC,QAAQ,OAAf,sBACA,yBAAQI,SAAU3C,EAAYyC,aAAc7C,EAASiD,KAAMxC,KAAK,OAAOnB,GAAG,OAA1E,UACE,wBAAQoB,MAAM,IAAd,kCACCd,EAAOsD,KAAI,SAAAC,GAAC,OACX,wBAAmBzC,MAAOyC,EAAE7D,GAA5B,SAAiC6D,EAAE1C,MAAtB0C,EAAE7D,aAIrB,sBAAKoD,cAAY,oBAAjB,UACE,uBAAOC,QAAQ,UAAf,uBACA,yBACEI,SAAU3C,EACVyC,aAAc7C,EAASoD,QACvB3C,KAAK,UACLnB,GAAG,UAJL,UAME,wBAAQoB,MAAM,IAAd,mCACCZ,EAAUoD,KAAI,SAAAC,GAAC,OACd,wBAAmBzC,MAAOyC,EAAE7D,GAA5B,SAAiC6D,EAAE1C,MAAtB0C,EAAE7D,aAIrB,sBAAKoD,cAAY,uBAAjB,UACE,uBAAOC,QAAQ,aAAf,8BACA,uBACEC,KAAK,OACLnC,KAAK,aACLnB,GAAG,aACHuD,aAAc7C,EAASqD,WACvBN,SAAU3C,OAGd,sBAAKsC,cAAY,mBAAjB,UACE,uBAAOC,QAAQ,SAAf,wBACA,sBAAKL,UAAU,gBAAf,UACE,wBAAOK,QAAQ,OAAf,UACE,uBACEC,KAAK,QACLnC,KAAK,SACLnB,GAAG,OACHuD,aAAc7C,EAASsD,OACvBP,SAAU3C,EACVM,MAAM,SAPV,oBAWA,wBAAOiC,QAAQ,SAAf,UACE,uBACEC,KAAK,QACLnC,KAAK,SACLnB,GAAG,SACHuD,aAAc7C,EAASsD,OACvBP,SAAU3C,EACVM,MAAM,WAPV,mBAWA,wBAAOiC,QAAQ,aAAf,UACE,uBACEC,KAAK,QACLnC,KAAK,SACLoC,aAAc7C,EAASsD,OACvBhE,GAAG,aACHyD,SAAU3C,EACVM,MAAM,eAPV,gCAaJ,qBAAK4B,UAAU,yCAAyCL,OAAgB,OAAR/B,EAAhE,SACE,sBAAMoC,UAAU,uBAAhB,UAA6C,OAALpC,QAAK,IAALA,OAAA,EAAAA,EAAO6B,UAAS,OAE1D,qBAAKW,cAAY,mBAAjB,SACE,wBAAQJ,UAAU,SAASiB,QAASlC,EAAQuB,KAAK,SAAjD,sD,gCErId,kHAEaY,GAAeC,EAEfC,EAAQ,CACnBC,eAAgB,4CAChBC,gBAAiB,yBAGNC,EATb,OAS4BC,EAAMC,OAAO,CACvCC,QAASR,EAAeE,EAAMC,eAAiBD,EAAME,mB,+OCP1CK,EAAsB,uCAAG,8BAAAC,EAAA,sEACfL,IAAaM,IAAuB,yBADrB,uBAC7B1C,EAD6B,EAC7BA,KAD6B,kBAE7BA,GAF6B,2CAAH,qDAItBT,EAAY,uCAAG,WAAOoD,GAAP,iBAAAF,EAAA,sEACLL,IAAaM,IAAc,aAAaC,GADnC,uBACnB3C,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZ4C,EAAe,uCAAG,WAAOC,GAAP,+BAAAJ,EAAA,6DAAwBK,EAAxB,+BAA+B,EAA/B,SACRV,IAAaM,IAAoB,YAAa,CACjE3E,OAAQ,CACNyD,KAAMqB,EACNC,KAAMA,KAJmB,uBACtB9C,EADsB,EACtBA,KADsB,kBAOtBA,GAPsB,2CAAH,sDAUf+C,EAAc,uCAAG,WAAOxE,GAAP,mBAAAkE,EAAA,sEACCL,IAAaY,KAAK,YAAazE,GADhC,uBACrBwB,EADqB,EACrBA,OAAQC,EADa,EACbA,KADa,kBAErB,CAACD,SAAQC,SAFY,2CAAH,sDAKdF,EAAc,uCAAG,WAAOvB,GAAP,mBAAAkE,EAAA,sEACCL,IAAaa,MAAM,YAAa1E,GADjC,uBACrBwB,EADqB,EACrBA,OAAQC,EADa,EACbA,KADa,kBAErB,CAACD,SAAQC,SAFY,2CAAH,uD,gCC3B3B,yDAGaU,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAF,OACvB,eAAC,IAAD,CAAMA,GAAIA,EAAV,UACE,uBAAOE,UAAU,kBAAjB,6BADF,a,yICDWxB,EAAY,uCAAG,8BAAAoD,EAAA,sEACLL,IAAaM,IAAY,SADpB,uBACnB1C,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,qDAKZV,EAAe,uCAAG,8BAAAmD,EAAA,sEACRL,IAAaM,IAAe,YADpB,uBACtB1C,EADsB,EACtBA,KADsB,kBAEtBA,GAFsB,2CAAH","file":"static/js/6.9e76b1e2.chunk.js","sourcesContent":["import React from 'react';\nimport { BackArrow } from '../components/BackArrow';\nimport { Loading } from '../components/Loading';\nimport { useLoadCustomerById } from '../hooks/customer-by-id';\n\nconst EditCustomer = () => {\n  const {\n    customer,\n    alterField,\n    cities,\n    error,\n    loading,\n    companies,\n    update\n  } = useLoadCustomerById();\n\n  return (\n    <>\n      <div hidden={!loading}>\n        <Loading/>\n      </div>\n      <div hidden={loading}>\n        <h2>\n          <BackArrow to={'/'}/>\n          Editar cliente {customer.email||''}\n        </h2>\n        <div className=\"px-2 mx-auto mb-10 max-w-sm\">\n          <form action=\"/customer\" method=\"post\" className=\"grid grid-flow-row\" onSubmit={()=>false}>\n            <div data-testid=\"first_name-container\">\n              <label htmlFor=\"first_name\">Primeiro nome:</label>\n              <input\n                type=\"text\"\n                name=\"first_name\"\n                id=\"first_name\"\n                defaultValue={customer.first_name}\n                onChange={alterField}\n              />\n            </div>\n            <div data-testid=\"last_name-container\">\n              <label htmlFor=\"last_name\">Segundo nome:</label>\n              <input\n                type=\"text\"\n                name=\"last_name\"\n                id=\"last_name\"\n                defaultValue={customer.last_name}\n                onChange={alterField}\n              />\n            </div>\n            <div data-testid=\"email-container\">\n              <label htmlFor=\"email\">E-mail:</label>\n              <input\n                type=\"text\"\n                name=\"email\"\n                id=\"email\"\n                defaultValue={customer.email}\n                onChange={alterField}\n              />\n            </div>\n            <div data-testid=\"city-container\">\n              <label htmlFor=\"city\">Cidade: </label>\n              <select onChange={alterField} defaultValue={customer.city} name=\"city\" id=\"city\">\n                <option value=\"0\">Selecione uma cidade</option>\n                {cities.map(i=>(\n                  <option key={i.id} value={i.id}>{i.name}</option>\n                ))}\n              </select>\n            </div>\n            <div data-testid=\"company-container\">\n              <label htmlFor=\"company\">Empresa: </label>\n              <select\n                onChange={alterField}\n                defaultValue={customer.company}\n                name=\"company\"\n                id=\"company\"\n              >\n                <option value=\"0\">Selecione uma empresa</option>\n                {companies.map(i=>(\n                  <option key={i.id} value={i.id}>{i.name}</option>\n                ))}\n              </select>\n            </div>\n            <div data-testid=\"titulation-container\">\n              <label htmlFor=\"titulation\">Titulação:</label>\n              <input\n                type=\"text\"\n                name=\"titulation\"\n                id=\"titulation\"\n                defaultValue={customer.titulation}\n                onChange={alterField}\n              />\n            </div>\n            <div data-testid=\"gender-container\">\n              <label htmlFor=\"gender\">Gênero:</label>\n              <div className=\"flex flex-col\">\n                <label htmlFor=\"male\">\n                  <input\n                    type=\"radio\"\n                    name=\"gender\"\n                    id=\"male\"\n                    defaultValue={customer.gender}\n                    onChange={alterField}\n                    value=\"male\"\n                  />&nbsp;\n                  Masculino\n                </label>\n                <label htmlFor=\"female\">\n                  <input\n                    type=\"radio\"\n                    name=\"gender\"\n                    id=\"female\"\n                    defaultValue={customer.gender}\n                    onChange={alterField}\n                    value=\"female\"\n                  />&nbsp;\n                  Feminino\n                </label>\n                <label htmlFor=\"uninformed\">\n                  <input\n                    type=\"radio\"\n                    name=\"gender\"\n                    defaultValue={customer.gender}\n                    id=\"uninformed\"\n                    onChange={alterField}\n                    value=\"uninformed\"\n                  />&nbsp;\n                  Não informar\n                </label>\n              </div>\n            </div>\n            <div className=\"p-2 bg-red-200 border-red-900 border-2\" hidden={error===null}>\n              <span className=\"text-black font-bold\">{error?.message||''}</span>\n            </div>\n            <div data-testid=\"submit-container\">\n              <button className=\"submit\" onClick={update} type=\"submit\">\n                Alterar informações\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default EditCustomer;\n","import { getAllCities, getAllCompanies } from 'api/utils-api';\nimport { updateCustomer } from 'api/customers-api';\nimport { City, Company, Customer } from 'portfolio-domain';\nimport { useEffect, useState, useCallback } from 'react';\nimport { useRouteMatch } from 'react-router';\nimport { customerById } from '../api/customers-api';\n\ntype Props = {\n  id?: string;\n}\n\ntype Event = React.ChangeEvent<HTMLInputElement|HTMLSelectElement>;\n\nexport const useLoadCustomerById = () => {\n  const {params:{id}} = useRouteMatch<Props>();\n  const [loading, setLoading] = useState(true);\n  const [cities, setCities] = useState([] as City[]);\n  const [companies, setCompanies] = useState([] as Company[]);\n  const [customer, setCustomer] = useState({} as Customer);\n  const [error, setError] = useState(null as {message:string}|null);\n\n  const alterField = useCallback((e: Event) => {\n    const draft = {...customer} as Record<string, unknown>;\n    draft[e.target.name] = e.target.value;\n    setCustomer(draft as Customer);\n  }, [customer]);\n\n  useEffect(() => {\n    Promise.all([\n      getAllCities(),\n      getAllCompanies(),\n      customerById(id as string)\n    ])\n      .then(e=> {\n        setCities(e[0]);\n        setCompanies(e[1]);\n        setCustomer(e[2]);\n      })\n      .catch(console.error)\n      .finally(()=>setLoading(false));\n  }, []);\n\n  const update = useCallback((e) => {\n    e.preventDefault();\n    updateCustomer(customer)\n      .then(({status, data}) => {\n        if(status === 202) {\n          window.location.href = '/customers-api';\n          return;\n        }\n        setError(data);\n      })\n      .catch(e => {\n        console.log(customer);\n        if(/409/.test(e.message)) {\n          setError({\n            message: 'Costumer email already created!'\n          });\n        }\n      });\n  }, [customer]);\n\n  return {\n    customer,\n    loading,\n    alterField,\n    companies,\n    cities,\n    error,\n    update\n  };\n};\n","import Axios from 'axios';\n\nexport const isProduction = process.env.NODE_ENV === 'production';\n\nexport const hosts = {\n  PRODUCTION_URL: 'https://customers-ghitiago.herokuapp.com/',\n  DEVELOPMENT_URL: 'http://localhost:8080'\n};\n\nexport const portfolioApi = Axios.create({\n  baseURL: isProduction ? hosts.PRODUCTION_URL : hosts.DEVELOPMENT_URL\n});\n","import { Customer, CustomerDTO, CustomersInCity, Page } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const customersGroupedByCity = async () => {\n  const {data} = await portfolioApi.get<CustomersInCity[]>('/customer/groupByCity');\n  return data;\n};\nexport const customerById = async (customerId: string) => {\n  const {data} = await portfolioApi.get<Customer>('/customer/'+customerId);\n  return data;\n};\n\nexport const customersByCity = async (city_id: string, page = 0) => {\n  const {data} = await portfolioApi.get<Page<Customer>>('/customer', {\n    params: {\n      city: city_id,\n      page: page\n    }\n  });\n  return data;\n};\n\nexport const createCustomer = async (customer: CustomerDTO) => {\n  const {status, data} = await portfolioApi.post('/customer', customer);\n  return {status, data};\n};\n\nexport const updateCustomer = async (customer: Customer) => {\n  const {status, data} = await portfolioApi.patch('/customer', customer);\n  return {status, data};\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const BackArrow = ({to}: {to: string}) => (\n  <Link to={to}>\n    <small className=\"text-indigo-400\"> &larr; voltar </small> &nbsp;\n  </Link>\n);\n","import { City, Company } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const getAllCities = async () => {\n  const {data} = await portfolioApi.get<City[]>('/city');\n  return data;\n};\n\nexport const getAllCompanies = async () => {\n  const {data} = await portfolioApi.get<Company[]>('/company');\n  return data;\n};\n"],"sourceRoot":""}