{"version":3,"sources":["api/config.ts","api/customers-api.ts","components/BackArrow/index.tsx","components/Cards/Customer/index.tsx","pages/customers-at-city.tsx","hooks/customers-by-city.ts"],"names":["portfolioApi","Axios","create","baseURL","customersGroupedByCity","a","get","data","customerById","customerId","customersByCity","city_id","page","params","city","console","log","createCustomer","customer","post","status","updateCustomer","patch","BackArrow","to","className","CustomerComponent","props","id","src","first_name","alt","email","title","data-testid","last_name","company","CustomersAtCity","useRouteMatch","useState","loading","setLoading","customers","setCustomers","useEffect","then","catch","error","finally","useLoadCustomersByCity","hidden","Loading","map","i","idx","key"],"mappings":"iGAAA,8CAEaA,EAFb,OAE4BC,EAAMC,OAAO,CACvCC,QAAS,2B,+OCAEC,EAAsB,uCAAG,8BAAAC,EAAA,sEACfL,IAAaM,IAAuB,yBADrB,uBAC7BC,EAD6B,EAC7BA,KAD6B,kBAE7BA,GAF6B,2CAAH,qDAItBC,EAAY,uCAAG,WAAOC,GAAP,iBAAAJ,EAAA,sEACLL,IAAaM,IAAc,aAAaG,GADnC,uBACnBF,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAe,uCAAG,WAAOC,GAAP,+BAAAN,EAAA,6DAAwBO,EAAxB,+BAA+B,EAA/B,SACRZ,IAAaM,IAAgB,YAAa,CAC7DO,OAAQ,CACNC,KAAMH,EACNC,KAAMA,KAJmB,uBACtBL,EADsB,EACtBA,KAMPQ,QAAQC,IAAIT,GAPiB,kBAQtBA,GARsB,2CAAH,sDAWfU,EAAc,uCAAG,WAAOC,GAAP,mBAAAb,EAAA,sEACCL,IAAamB,KAAK,YAAaD,GADhC,uBACrBE,EADqB,EACrBA,OAAQb,EADa,EACbA,KADa,kBAErB,CAACa,SAAQb,SAFY,2CAAH,sDAKdc,EAAc,uCAAG,WAAOH,GAAP,mBAAAb,EAAA,sEACCL,IAAasB,MAAM,YAAaJ,GADjC,uBACrBE,EADqB,EACrBA,OAAQb,EADa,EACbA,KADa,kBAErB,CAACa,SAAQb,SAFY,2CAAH,uD,gCC5B3B,yDAGagB,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAF,OACvB,eAAC,IAAD,CAAMA,GAAIA,EAAV,UACE,uBAAOC,UAAU,kBAAjB,6BADF,a,wECAWC,EAAoB,SAACC,GAAD,OAC/B,eAAC,IAAD,CAAMH,GAAE,oBAAeG,EAAMC,IAAMH,UAAU,gBAA7C,UACE,qBAAKA,UAAU,OAAf,SACE,qBACEI,IAAG,iDAA4CF,EAAMG,YACrDC,IAAG,qBAAgBJ,EAAMK,OACzBP,UAAU,iCAGd,sBAAKA,UAAU,OAAf,UACE,6BACE,uBAAOQ,MAAON,EAAMK,MAApB,SAA4BL,EAAMK,UAEpC,oBAAIE,cAAY,gBAAhB,SAAiCP,EAAMG,WAAa,IAAMH,EAAMQ,YAChE,6BACE,gCAAQR,EAAMS,mB,uCCWPC,UAxBS,WACtB,MCEoC,WACpC,IAAgB1B,EAAY2B,cAArBzB,OAASF,QAChB,EAA8B4B,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KASA,OAPAC,qBAAU,WACRlC,YAAgBC,GAAS,KACtBkC,KAAKF,GACLG,MAAM/B,QAAQgC,OACdC,SAAQ,kBAAMP,GAAW,QAC3B,IAEI,CACLC,YACAF,WDbES,GAFFP,EADF,EACEA,UACAF,EAFF,EAEEA,QAGF,OACE,qCACE,+BACE,cAACjB,EAAA,EAAD,CAAWC,GAAI,MADjB,yBAIA,qBAAK0B,QAASV,EAAd,SACE,cAACW,EAAA,EAAD,MAEF,qBAAK1B,UAAU,gBAAgByB,OAAQV,EAAvC,SACGE,EAAUU,KAAI,SAACC,EAAGC,GAAJ,OACb,wBAAC,EAAD,2BAAuBD,GAAvB,IAA0BE,IAAKD","file":"static/js/6.474b8242.chunk.js","sourcesContent":["import Axios from 'axios';\n\nexport const portfolioApi = Axios.create({\n  baseURL: 'http://localhost:8080'\n});\n","import { Customer, CustomerDTO, CustomersInCity } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const customersGroupedByCity = async () => {\n  const {data} = await portfolioApi.get<CustomersInCity[]>('/customer/groupByCity');\n  return data;\n};\nexport const customerById = async (customerId: string) => {\n  const {data} = await portfolioApi.get<Customer>('/customer/'+customerId);\n  return data;\n};\n\nexport const customersByCity = async (city_id: string, page = 0) => {\n  const {data} = await portfolioApi.get<Customer[]>('/customer', {\n    params: {\n      city: city_id,\n      page: page\n    }\n  });\n  console.log(data);\n  return data;\n};\n\nexport const createCustomer = async (customer: CustomerDTO) => {\n  const {status, data} = await portfolioApi.post('/customer', customer);\n  return {status, data};\n};\n\nexport const updateCustomer = async (customer: Customer) => {\n  const {status, data} = await portfolioApi.patch('/customer', customer);\n  return {status, data};\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const BackArrow = ({to}: {to: string}) => (\n  <Link to={to}>\n    <small className=\"text-indigo-400\"> &larr; voltar </small> &nbsp;\n  </Link>\n);\n","import React from 'react';\nimport { Customer } from 'portfolio-domain';\nimport { Link } from 'react-router-dom';\n\nexport const CustomerComponent = (props: Customer) => (\n  <Link to={`/customer/${props.id}`} className=\"customer-card\">\n    <div className=\"w-24\">\n      <img\n        src={`https://via.placeholder.com/64x64?text=${props.first_name}`}\n        alt={`profile of ${props.email}`}\n        className=\"rounded-l-md w-full h-full\"\n      />\n    </div>\n    <div className=\"info\">\n      <h4>\n        <small title={props.email}>{props.email}</small>\n      </h4>\n      <h3 data-testid=\"customer-name\">{props.first_name + ' ' + props.last_name}</h3>\n      <h4>\n        <small>{props.company}</small>\n      </h4>\n    </div>\n  </Link>\n);\n","import React from 'react';\nimport { CustomerComponent } from '../components/Cards/Customer';\nimport { useLoadCustomersByCity } from '../hooks/customers-by-city';\nimport { Loading } from '../components/Loading';\nimport { BackArrow } from '../components/BackArrow';\n\nconst CustomersAtCity = () => {\n  const {\n    customers,\n    loading\n  } = useLoadCustomersByCity();\n\n  return (\n    <>\n      <h2>\n        <BackArrow to={'/'}/>\n        Clientes na cidade:\n      </h2>\n      <div hidden={!loading}>\n        <Loading/>\n      </div>\n      <div className=\"customer-list\" hidden={loading}>\n        {customers.map((i, idx)=>(\n          <CustomerComponent {...i} key={idx} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default CustomersAtCity;\n","import { useEffect, useState } from 'react';\nimport { Customer } from 'portfolio-domain';\nimport { customersByCity } from '../api/customers-api';\nimport { useRouteMatch } from 'react-router-dom';\n\ntype Props = {\n  city_id?:string;\n}\n\nexport const useLoadCustomersByCity = () => {\n  const {params: {city_id}} = useRouteMatch<Props>();\n  const [loading, setLoading] = useState(true);\n  const [customers, setCustomers] = useState([] as Customer[]);\n\n  useEffect(() => {\n    customersByCity(city_id||'0')\n      .then(setCustomers)\n      .catch(console.error)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return {\n    customers,\n    loading\n  };\n};\n"],"sourceRoot":""}