{"version":3,"sources":["components/Cards/Customer/index.tsx","hooks/customers-by-city.ts","api/socket.ts","pages/customers-at-city.tsx","api/config.ts","api/customers-api.ts","components/BackArrow/index.tsx"],"names":["CustomerComponent","props","to","id","className","src","first_name","alt","email","title","data-testid","last_name","company","useLoadCustomersByCity","connection","useRef","io","current","city_id","useRouteMatch","params","useState","loading","setLoading","customers","setCustomers","pages","setPages","useEffect","load","customersByCity","then","res","results","catch","console","error","finally","on","loadMore","useCallback","page","CustomersAtCity","BackArrow","hidden","Loading","map","i","idx","key","range","onClick","portfolioApi","Axios","create","baseURL","customersGroupedByCity","a","get","data","customerById","customerId","city","createCustomer","customer","post","status","updateCustomer","patch"],"mappings":"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","file":"static/js/7.102405c7.chunk.js","sourcesContent":["import React from 'react';\nimport { Customer } from 'portfolio-domain';\nimport { Link } from 'react-router-dom';\n\nexport const CustomerComponent = (props: Customer) => (\n  <Link to={`/customer/${props.id}`} className=\"customer-card\">\n    <div className=\"w-40\">\n      <img\n        src={`https://via.placeholder.com/300x300?text=${props.first_name}`}\n        alt={`profile of ${props.email}`}\n        className=\"rounded-l-md w-full h-full\"\n      />\n    </div>\n    <div className=\"info\">\n      <h4>\n        <small title={props.email}>{props.email}</small>\n      </h4>\n      <h3 data-testid=\"customer-name\">{props.first_name + ' ' + props.last_name}</h3>\n      <h4>\n        <small>{props.company}</small>\n      </h4>\n    </div>\n  </Link>\n);\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { Customer } from 'portfolio-domain';\nimport { customersByCity } from 'api/customers-api';\nimport { useRouteMatch } from 'react-router-dom';\nimport { connect } from 'api/socket';\n\ntype Props = {\n  city_id?:string;\n}\n\nexport const useLoadCustomersByCity = () => {\n  const {current:connection} = useRef(connect());\n  const {params: {city_id}} = useRouteMatch<Props>();\n  const [loading, setLoading] = useState(true);\n  const [customers, setCustomers] = useState([] as Customer[]);\n  const [pages, setPages] = useState(0);\n\n  useEffect(() => {\n    const load = () => customersByCity(city_id||'0')\n      .then((res) => {\n        setCustomers(res.results);\n        setPages(res.pages);\n      })\n      .catch(console.error)\n      .finally(() => setLoading(false));\n\n    connection.on('alterated customers', () => {\n      load();\n    });\n    load();\n  }, []);\n\n  const loadMore = useCallback((page: number) => {\n    customersByCity(city_id||'0', page)\n      .then(res => {\n        setCustomers(res.results);\n      })\n      .catch();\n  }, [customers]);\n\n  return {\n    customers,\n    loading,\n    pages,\n    loadMore\n  };\n};\n","import io from 'socket.io-client';\n\nexport const connect = () => {\n  const socket = io('http://localhost:8080');\n  return socket;\n};\n","import React from 'react';\nimport { CustomerComponent } from '../components/Cards/Customer';\nimport { useLoadCustomersByCity } from '../hooks/customers-by-city';\nimport { Loading } from '../components/Loading';\nimport { BackArrow } from '../components/BackArrow';\nimport { range } from 'lodash';\n\nconst CustomersAtCity = () => {\n  const {\n    customers,\n    loading,\n    pages,\n    loadMore\n  } = useLoadCustomersByCity();\n\n  return (\n    <>\n      <h2>\n        <BackArrow to={'/'}/>\n        Clientes na cidade:\n      </h2>\n      <div hidden={!loading}>\n        <Loading/>\n      </div>\n      <div className=\"customer-list mb-5\" hidden={loading}>\n        {customers.map((i, idx)=>(\n          <CustomerComponent {...i} key={idx} />\n        ))}\n      </div>\n      <div className=\"space-x-2 mb-16 flex flex-row justify-end\" hidden={pages!==0}>\n        {range(1, pages+1).map(i=> (\n          <button className=\"page-select\" onClick={()=>loadMore(i)} key={i}>{i}</button>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default CustomersAtCity;\n","import Axios from 'axios';\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\nexport const portfolioApi = Axios.create({\n  baseURL: isProduction ? '' : 'http://localhost:8080'\n});\n","import { Customer, CustomerDTO, CustomersInCity, Page } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const customersGroupedByCity = async () => {\n  const {data} = await portfolioApi.get<CustomersInCity[]>('/customer/groupByCity');\n  return data;\n};\nexport const customerById = async (customerId: string) => {\n  const {data} = await portfolioApi.get<Customer>('/customer/'+customerId);\n  return data;\n};\n\nexport const customersByCity = async (city_id: string, page = 0) => {\n  const {data} = await portfolioApi.get<Page<Customer>>('/customer', {\n    params: {\n      city: city_id,\n      page: page\n    }\n  });\n  return data;\n};\n\nexport const createCustomer = async (customer: CustomerDTO) => {\n  const {status, data} = await portfolioApi.post('/customer', customer);\n  return {status, data};\n};\n\nexport const updateCustomer = async (customer: Customer) => {\n  const {status, data} = await portfolioApi.patch('/customer', customer);\n  return {status, data};\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const BackArrow = ({to}: {to: string}) => (\n  <Link to={to}>\n    <small className=\"text-indigo-400\"> &larr; voltar </small> &nbsp;\n  </Link>\n);\n"],"sourceRoot":""}