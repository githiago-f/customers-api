{"version":3,"sources":["components/Loading/index.tsx","components/Nav/index.tsx","components/FAB/index.tsx","app/router.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Loading","className","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","NavBar","Fab","to","CityList","lazy","CustomersAtCity","CreateCustomer","EditCustomer","Routes","basename","fallback","path","exact","App","href","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iGAAA,kDAEaA,EAAU,kBACrB,sBAAKC,UAAU,+CAA+CC,MAAM,6BAA6BC,KAAK,OAAOC,QAAQ,YAArH,UACE,wBACEH,UAAU,aACVI,GAAG,KACHC,GAAG,KACHC,EAAE,KACFC,OAAO,eACPC,YAAY,MAEd,sBACER,UAAU,aACVE,KAAK,UACLO,EAAE,yH,gHCbKC,EAAS,kBACpB,wBAAQV,UAAU,kBAAlB,SACE,qBAAKA,UAAU,oCAAf,SACE,oBAAIA,UAAU,UAAd,uC,sBCFOW,EAAM,kBACjB,cAAC,IAAD,CAAMC,GAAG,YAAYZ,UAAU,UAA/B,gBCCIa,EAAWC,gBAAK,kBAAM,uDACtBC,EAAkBD,gBAAK,kBAAM,8DAC7BE,EAAiBF,gBAAK,kBAAM,uDAC5BG,EAAeH,gBAAK,kBAAM,uDAEnBI,EAAS,kBACpB,cAAC,IAAD,CAAQC,SAAS,gBAAjB,SACE,eAAC,WAAD,CAAUC,SAAU,cAACrB,EAAA,EAAD,IAApB,UACE,cAAC,IAAD,CAAOsB,KAAK,IAAIC,OAAK,EAArB,SACE,cAACT,EAAD,MAEF,cAAC,IAAD,CAAOQ,KAAK,yBAAZ,SACE,cAACN,EAAD,MAEF,cAAC,IAAD,CAAOO,OAAK,EAACD,KAAK,YAAlB,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOM,OAAK,EAACD,KAAK,gBAAlB,SACE,cAACJ,EAAD,MAEF,cAAC,EAAD,UCHSM,EAjBH,kBACV,mCACE,iCACE,cAAC,EAAD,IACA,qBAAKvB,UAAU,uDAAf,SACE,cAAC,EAAD,MAEF,wBAAQA,UAAU,gDAAlB,SACE,gDACE,mBAAGwB,KAAK,6CAA6CC,MAAM,YAA3D,uBADF,aAES,mBAAGD,KAAK,4BAA4BC,MAAM,WAA1C,yCCDFC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.afe66ad7.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => (\n  <svg className=\"animate-spin mx-auto h-10 w-10 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n    <circle\n      className=\"opacity-25\"\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"4\"\n    />\n    <path\n      className=\"opacity-75\"\n      fill=\"#3730A3\"\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const NavBar = () => (\n  <header className=\"bg-white shadow\">\n    <div className=\"mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n      <h1 className=\"text-lg\">Carteira de clientes</h1>\n    </div>\n  </header>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Fab = () => (\n  <Link to=\"/customer\" className=\"fab-btn\">\n    &#43;\n  </Link>\n);\n","import React, {lazy, Suspense} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Loading } from '../components/Loading';\nimport { Fab } from 'components/FAB';\n\nconst CityList = lazy(() => import('../pages/city-list'));\nconst CustomersAtCity = lazy(() => import('../pages/customers-at-city'));\nconst CreateCustomer = lazy(() => import('../pages/create-customer'));\nconst EditCustomer = lazy(() => import('../pages/edit-customer'));\n\nexport const Routes = () => (\n  <Router basename='customers-api'>\n    <Suspense fallback={<Loading/>}>\n      <Route path=\"/\" exact>\n        <CityList/>\n      </Route>\n      <Route path='/customers/at/:city_id'>\n        <CustomersAtCity/>\n      </Route>\n      <Route exact path='/customer'>\n        <CreateCustomer/>\n      </Route>\n      <Route exact path=\"/customer/:id\">\n        <EditCustomer/>\n      </Route>\n      <Fab/>\n    </Suspense>\n  </Router>\n);\n","import React from 'react';\nimport '../assets/css/index.css';\nimport { NavBar } from '../components/Nav';\nimport { Routes } from './router';\n\nconst App = () => (\n  <>\n    <main>\n      <NavBar/>\n      <div className=\"container mx-auto sm:px-2 min-h-screen overflow-auto\">\n        <Routes/>\n      </div>\n      <footer className=\"w-full text-center align-middle h-11 bg-white\">\n        <div>Icons made by\n          <a href=\"https://www.flaticon.com/authors/good-ware\" title=\"Good Ware\">Good Ware</a>&nbsp;\n            from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n      </footer>\n    </main>\n  </>\n);\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}