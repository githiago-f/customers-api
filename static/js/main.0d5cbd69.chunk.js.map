{"version":3,"sources":["components/Loading/index.tsx","components/BackArrow/index.tsx","api/config.ts","api/customers-api.ts","components/Nav/index.tsx","pages/create-customer.tsx","pages/edit-customer.tsx","hooks/customer-by-id.ts","app/router.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Loading","className","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","BackArrow","to","portfolioApi","Axios","create","baseURL","customersGroupedByCity","a","get","data","customerById","customerId","customersByCity","city_id","page","params","city","console","log","NavBar","CreateCustomer","EditCustomer","id","useRouteMatch","useState","loading","setLoading","customer","setCustomer","useEffect","then","catch","error","finally","useLoadCustomerById","hidden","IndexPage","lazy","CityList","CustomersAtCity","Routes","basename","fallback","exact","path","App","href","title","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d5cbd69.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => (\n  <svg className=\"animate-spin mx-auto h-10 w-10 text-gray-500\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n    <circle\n      className=\"opacity-25\"\n      cx=\"12\"\n      cy=\"12\"\n      r=\"10\"\n      stroke=\"currentColor\"\n      strokeWidth=\"4\"\n    />\n    <path\n      className=\"opacity-75\"\n      fill=\"#3730A3\"\n      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n    />\n  </svg>\n);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const BackArrow = ({to}: {to: string}) => (\n  <Link to={to}>\n    <small className=\"text-indigo-400\"> &larr; voltar </small> &nbsp;\n  </Link>\n);\n","import Axios from 'axios';\n\nexport const portfolioApi = Axios.create({\n  baseURL: 'http://localhost:8080'\n});\n","import { Customer, CustomersInCity } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const customersGroupedByCity = async () => {\n  const {data} = await portfolioApi.get<CustomersInCity[]>('/customer/groupByCity');\n  return data;\n};\nexport const customerById = async (customerId: string) => {\n  const {data} = await portfolioApi.get<Customer>('/customer/'+customerId);\n  return data;\n};\nexport const customersByCity = async (city_id: string, page = 0) => {\n  const {data} = await portfolioApi.get<Customer[]>('/customer', {\n    params: {\n      city: city_id,\n      page: page\n    }\n  });\n  console.log(data);\n  return data;\n};\n","import React from 'react';\n\nexport const NavBar = () => (\n  <header className=\"bg-white shadow\">\n    <div className=\"mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n      <h1>Dashboard</h1>\n    </div>\n  </header>\n);\n","import React from 'react';\nimport { BackArrow } from '../components/BackArrow';\nexport const CreateCustomer = () => {\n  return (\n    <>\n      <h2>\n        <BackArrow to={'/'}/>\n        Criar cliente\n      </h2>\n    </>\n  );\n};\n","import React from 'react';\nimport { BackArrow } from '../components/BackArrow';\nimport { Loading } from '../components/Loading';\nimport { useLoadCustomerById } from '../hooks/customer-by-id';\nexport const EditCustomer = () => {\n  const {\n    customer,\n    loading\n  } = useLoadCustomerById();\n\n  return (\n    <>\n      <h2>\n        <BackArrow to={`/customers/at/${customer?.city}`}/>\n        Editar cliente\n      </h2>\n      <div hidden={!loading}>\n        <Loading/>\n      </div>\n      <div>\n        <h3>Formul√°rio para editar cliente.</h3>\n      </div>\n    </>\n  );\n};\n","import { Customer } from 'portfolio-domain';\nimport { useEffect, useState } from 'react';\nimport { useRouteMatch } from 'react-router';\nimport { customerById } from '../api/customers-api';\n\ntype Props = {\n  id?: string;\n}\n\nexport const useLoadCustomerById = () => {\n  const {params:{id}} = useRouteMatch<Props>();\n  const [loading, setLoading] = useState(true);\n  const [customer, setCustomer] = useState(null as Customer | null);\n\n  useEffect(() => {\n    customerById(id||'0')\n      .then(setCustomer)\n      .catch(console.error)\n      .finally(()=>setLoading(false));\n  }, []);\n\n  return {\n    customer,\n    loading\n  };\n};\n","import React, {lazy, Suspense} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Loading } from '../components/Loading';\nimport { CreateCustomer } from '../pages/create-customer';\nimport { EditCustomer } from '../pages/edit-customer';\n\nconst IndexPage = lazy(() => import('../pages'));\nconst CityList = lazy(() => import('../pages/city-list'));\nconst CustomersAtCity = lazy(() => import('../pages/customers-at-city'));\n\nexport const Routes = () => (\n  <Router basename='customers-api'>\n    <Suspense fallback={<Loading/>}>\n      <Route exact path='/'>\n        <IndexPage/>\n      </Route>\n      <Route path=\"/cities\">\n        <CityList/>\n      </Route>\n      <Route path='/customers/at/:city_id'>\n        <CustomersAtCity/>\n      </Route>\n      <Route exact path='/customer'>\n        <CreateCustomer/>\n      </Route>\n      <Route exact path=\"/customer/:id\">\n        <EditCustomer/>\n      </Route>\n    </Suspense>\n  </Router>\n);\n","import React from 'react';\nimport '../assets/css/index.css';\nimport { NavBar } from '../components/Nav';\nimport { Routes } from './router';\n\nfunction App() {\n  return (\n    <>\n      <main>\n        <NavBar/>\n        <div className=\"container mx-auto h-screen\">\n          <Routes/>\n        </div>\n        <footer className=\"w-full bg-white\">\n          <div>Icons made by <a href=\"https://www.flaticon.com/authors/good-ware\" title=\"Good Ware\">Good Ware</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n        </footer>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}