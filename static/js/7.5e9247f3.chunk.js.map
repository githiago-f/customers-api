{"version":3,"sources":["api/config.ts","api/customers-api.ts","components/BackArrow/index.tsx","pages/edit-customer.tsx","hooks/customer-by-id.ts"],"names":["portfolioApi","Axios","create","baseURL","customersGroupedByCity","a","get","data","customerById","customerId","customersByCity","city_id","page","params","city","console","log","BackArrow","to","className","EditCustomer","id","useRouteMatch","useState","loading","setLoading","customer","setCustomer","useEffect","then","catch","error","finally","useLoadCustomerById","hidden","Loading"],"mappings":"iGAAA,8CAEaA,EAFb,OAE4BC,EAAMC,OAAO,CACvCC,QAAS,2B,2KCAEC,EAAsB,uCAAG,8BAAAC,EAAA,sEACfL,IAAaM,IAAuB,yBADrB,uBAC7BC,EAD6B,EAC7BA,KAD6B,kBAE7BA,GAF6B,2CAAH,qDAItBC,EAAY,uCAAG,WAAOC,GAAP,iBAAAJ,EAAA,sEACLL,IAAaM,IAAc,aAAaG,GADnC,uBACnBF,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAIZG,EAAe,uCAAG,WAAOC,GAAP,+BAAAN,EAAA,6DAAwBO,EAAxB,+BAA+B,EAA/B,SACRZ,IAAaM,IAAgB,YAAa,CAC7DO,OAAQ,CACNC,KAAMH,EACNC,KAAMA,KAJmB,uBACtBL,EADsB,EACtBA,KAMPQ,QAAQC,IAAIT,GAPiB,kBAQtBA,GARsB,2CAAH,uD,gCCX5B,yDAGaU,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAF,OACvB,eAAC,IAAD,CAAMA,GAAIA,EAAV,UACE,uBAAOC,UAAU,kBAAjB,6BADF,a,gGCuBaC,UAtBM,WACnB,MCGiC,WACjC,IAAeC,EAAOC,cAAfT,OAAQQ,GACf,EAA8BE,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAAS,MAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KASA,OAPAC,qBAAU,WACRpB,YAAaa,GAAI,KACdQ,KAAKF,GACLG,MAAMf,QAAQgB,OACdC,SAAQ,kBAAIP,GAAW,QACzB,IAEI,CACLC,WACAF,WDdES,GAFFP,EADF,EACEA,SACAF,EAFF,EAEEA,QAGF,OACE,qCACE,+BACE,cAACP,EAAA,EAAD,CAAWC,GAAE,+BAAmBQ,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAUZ,QAD5C,oBAIA,qBAAKoB,QAASV,EAAd,SACE,cAACW,EAAA,EAAD,MAEF,8BACE","file":"static/js/7.5e9247f3.chunk.js","sourcesContent":["import Axios from 'axios';\n\nexport const portfolioApi = Axios.create({\n  baseURL: 'http://localhost:8080'\n});\n","import { Customer, CustomersInCity } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const customersGroupedByCity = async () => {\n  const {data} = await portfolioApi.get<CustomersInCity[]>('/customer/groupByCity');\n  return data;\n};\nexport const customerById = async (customerId: string) => {\n  const {data} = await portfolioApi.get<Customer>('/customer/'+customerId);\n  return data;\n};\nexport const customersByCity = async (city_id: string, page = 0) => {\n  const {data} = await portfolioApi.get<Customer[]>('/customer', {\n    params: {\n      city: city_id,\n      page: page\n    }\n  });\n  console.log(data);\n  return data;\n};\n\nexport const createCustomer = async (customer: Customer) => {\n  const {status, data} = await portfolioApi.post('/customer', customer);\n  console.log(status, data);\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const BackArrow = ({to}: {to: string}) => (\n  <Link to={to}>\n    <small className=\"text-indigo-400\"> &larr; voltar </small> &nbsp;\n  </Link>\n);\n","import React from 'react';\nimport { BackArrow } from '../components/BackArrow';\nimport { Loading } from '../components/Loading';\nimport { useLoadCustomerById } from '../hooks/customer-by-id';\n\nconst EditCustomer = () => {\n  const {\n    customer,\n    loading\n  } = useLoadCustomerById();\n\n  return (\n    <>\n      <h2>\n        <BackArrow to={`/customers/at/${customer?.city}`}/>\n        Editar cliente\n      </h2>\n      <div hidden={!loading}>\n        <Loading/>\n      </div>\n      <div>\n        <h3>Formul√°rio para editar cliente.</h3>\n      </div>\n    </>\n  );\n};\n\nexport default EditCustomer;\n","import { Customer } from 'portfolio-domain';\nimport { useEffect, useState } from 'react';\nimport { useRouteMatch } from 'react-router';\nimport { customerById } from '../api/customers-api';\n\ntype Props = {\n  id?: string;\n}\n\nexport const useLoadCustomerById = () => {\n  const {params:{id}} = useRouteMatch<Props>();\n  const [loading, setLoading] = useState(true);\n  const [customer, setCustomer] = useState(null as Customer | null);\n\n  useEffect(() => {\n    customerById(id||'0')\n      .then(setCustomer)\n      .catch(console.error)\n      .finally(()=>setLoading(false));\n  }, []);\n\n  return {\n    customer,\n    loading\n  };\n};\n"],"sourceRoot":""}