{"version":3,"sources":["components/BackArrow/index.tsx","api/config.ts","api/customers-api.ts","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Cards/Customer/index.tsx","pages/customers-at-city.tsx","hooks/customers-by-city.ts"],"names":["BackArrow","to","className","portfolioApi","Axios","create","baseURL","customersGroupedByCity","a","get","data","customerById","customerId","customersByCity","city_id","page","params","city","console","log","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","CustomerComponent","props","id","src","first_name","alt","email","title","data-testid","last_name","company","CustomersAtCity","useRouteMatch","useState","loading","setLoading","customers","setCustomers","useEffect","then","catch","error","finally","useLoadCustomersByCity","hidden","Loading","map","idx"],"mappings":"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","file":"static/js/4.8a89b740.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nexport const BackArrow = ({to}: {to: string}) => (\n  <Link to={to}>\n    <small className=\"text-indigo-400\"> &larr; voltar </small> &nbsp;\n  </Link>\n);\n","import Axios from 'axios';\n\nexport const portfolioApi = Axios.create({\n  baseURL: 'http://localhost:8080'\n});\n","import { Customer, CustomersInCity } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const customersGroupedByCity = async () => {\n  const {data} = await portfolioApi.get<CustomersInCity[]>('/customer/groupByCity');\n  return data;\n};\nexport const customerById = async (customerId: string) => {\n  const {data} = await portfolioApi.get<Customer>('/customer/'+customerId);\n  return data;\n};\nexport const customersByCity = async (city_id: string, page = 0) => {\n  const {data} = await portfolioApi.get<Customer[]>('/customer', {\n    params: {\n      city: city_id,\n      page: page\n    }\n  });\n  console.log(data);\n  return data;\n};\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from 'react';\nimport { Customer } from 'portfolio-domain';\nimport { Link } from 'react-router-dom';\n\nexport const CustomerComponent = (props: Customer) => (\n  <Link to={`/customer/${props.id}`} className=\"customer-card\">\n    <div className=\"w-24\">\n      <img\n        src={`https://via.placeholder.com/64x64?text=${props.first_name}`}\n        alt={`profile of ${props.email}`}\n        className=\"rounded-l-md w-full h-full\"\n      />\n    </div>\n    <div className=\"info\">\n      <h4>\n        <small title={props.email}>{props.email}</small>\n      </h4>\n      <h3 data-testid=\"customer-name\">{props.first_name + ' ' + props.last_name}</h3>\n      <h4>\n        <small>{props.company}</small>\n      </h4>\n    </div>\n  </Link>\n);\n","import React from 'react';\nimport { CustomerComponent } from '../components/Cards/Customer';\nimport { useLoadCustomersByCity } from '../hooks/customers-by-city';\nimport { Loading } from '../components/Loading';\nimport { BackArrow } from '../components/BackArrow';\n\nconst CustomersAtCity = () => {\n  const {\n    customers,\n    loading\n  } = useLoadCustomersByCity();\n\n  return (\n    <>\n      <h2>\n        <BackArrow to={'/'}/>\n        Clientes na cidade:\n      </h2>\n      <div hidden={!loading}>\n        <Loading/>\n      </div>\n      <div className=\"customer-list\" hidden={loading}>\n        {customers.map((i, idx)=>(\n          <CustomerComponent {...i} key={idx} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default CustomersAtCity;\n","import { useEffect, useState } from 'react';\nimport { Customer } from 'portfolio-domain';\nimport { customersByCity } from '../api/customers-api';\nimport { useRouteMatch } from 'react-router-dom';\n\ntype Props = {\n  city_id?:string;\n}\n\nexport const useLoadCustomersByCity = () => {\n  const {params: {city_id}} = useRouteMatch<Props>();\n  const [loading, setLoading] = useState(true);\n  const [customers, setCustomers] = useState([] as Customer[]);\n\n  useEffect(() => {\n    customersByCity(city_id||'0')\n      .then(setCustomers)\n      .catch(console.error)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return {\n    customers,\n    loading\n  };\n};\n"],"sourceRoot":""}