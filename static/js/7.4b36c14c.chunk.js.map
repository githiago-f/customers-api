{"version":3,"sources":["api/config.ts","api/customers-api.ts","assets/img/location.svg","components/Cards/TotalInCity/index.tsx","pages/city-list.tsx","hooks/load-all-cities.ts"],"names":["portfolioApi","Axios","create","baseURL","customersGroupedByCity","a","get","data","customerById","customerId","customersByCity","city_id","page","params","city","console","log","createCustomer","customer","post","status","updateCustomer","patch","TotalInCity","customers_total","to","className","src","location","alt","CityList","useState","loading","setLoading","cityCustomers","setCityCustomers","useEffect","then","catch","error","finally","useLoadAllCities","hidden","map","i","indx","Loading"],"mappings":"iGAAA,8CAEaA,EAFb,OAE4BC,EAAMC,OAAO,CACvCC,QAAS,2B,+OCAEC,EAAsB,uCAAG,8BAAAC,EAAA,sEACfL,IAAaM,IAAuB,yBADrB,uBAC7BC,EAD6B,EAC7BA,KAD6B,kBAE7BA,GAF6B,2CAAH,qDAItBC,EAAY,uCAAG,WAAOC,GAAP,iBAAAJ,EAAA,sEACLL,IAAaM,IAAc,aAAaG,GADnC,uBACnBF,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAe,uCAAG,WAAOC,GAAP,+BAAAN,EAAA,6DAAwBO,EAAxB,+BAA+B,EAA/B,SACRZ,IAAaM,IAAgB,YAAa,CAC7DO,OAAQ,CACNC,KAAMH,EACNC,KAAMA,KAJmB,uBACtBL,EADsB,EACtBA,KAMPQ,QAAQC,IAAIT,GAPiB,kBAQtBA,GARsB,2CAAH,sDAWfU,EAAc,uCAAG,WAAOC,GAAP,mBAAAb,EAAA,sEACCL,IAAamB,KAAK,YAAaD,GADhC,uBACrBE,EADqB,EACrBA,OAAQb,EADa,EACbA,KADa,kBAErB,CAACa,SAAQb,SAFY,2CAAH,sDAKdc,EAAc,uCAAG,WAAOH,GAAP,mBAAAb,EAAA,sEACCL,IAAasB,MAAM,YAAaJ,GADjC,uBACrBE,EADqB,EACrBA,OAAQb,EADa,EACbA,KADa,kBAErB,CAACa,SAAQb,SAFY,2CAAH,uD,iEC5BZ,MAA0B,qC,OCK5BgB,EAAc,SAAC,GAAD,IAAGT,EAAH,EAAGA,KAAMU,EAAT,EAASA,gBAAT,OACzB,cAAC,IAAD,CAAMC,GAAI,iBAAmBX,EAA7B,SACE,sBAAKY,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBAAKC,IAAKC,EAAUC,IAAI,oBAE1B,sBAAKH,UAAU,gBAAf,UACE,sBAAMA,UAAU,kBAAhB,SAAmCZ,IAAY,uBAC/C,8CAAiBU,c,wBCYVM,UAnBE,WACf,MCH8B,WAC9B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KASA,OAPAC,qBAAU,WACRhC,cACGiC,KAAKF,GACLG,MAAMvB,QAAQwB,OACdC,SAAQ,kBAAIP,GAAW,QACzB,IAEI,CACLC,gBACAF,WDV+BS,GAA1BP,EAAP,EAAOA,cAAeF,EAAtB,EAAsBA,QACtB,OACE,qCACE,oBAAIN,UAAU,OAAd,qBAGA,qBAAKA,UAAU,gBAAgBgB,OAAQV,EAAvC,SACGE,EAAcS,KAAI,SAACC,EAAGC,GAAJ,OACjB,cAAC,EAAD,eAA4BD,GAAVC,QAGtB,qBAAKH,QAASV,EAAd,SACE,cAACc,EAAA,EAAD","file":"static/js/7.4b36c14c.chunk.js","sourcesContent":["import Axios from 'axios';\n\nexport const portfolioApi = Axios.create({\n  baseURL: 'http://localhost:8080'\n});\n","import { Customer, CustomerDTO, CustomersInCity } from 'portfolio-domain';\nimport { portfolioApi } from './config';\n\nexport const customersGroupedByCity = async () => {\n  const {data} = await portfolioApi.get<CustomersInCity[]>('/customer/groupByCity');\n  return data;\n};\nexport const customerById = async (customerId: string) => {\n  const {data} = await portfolioApi.get<Customer>('/customer/'+customerId);\n  return data;\n};\n\nexport const customersByCity = async (city_id: string, page = 0) => {\n  const {data} = await portfolioApi.get<Customer[]>('/customer', {\n    params: {\n      city: city_id,\n      page: page\n    }\n  });\n  console.log(data);\n  return data;\n};\n\nexport const createCustomer = async (customer: CustomerDTO) => {\n  const {status, data} = await portfolioApi.post('/customer', customer);\n  return {status, data};\n};\n\nexport const updateCustomer = async (customer: Customer) => {\n  const {status, data} = await portfolioApi.patch('/customer', customer);\n  return {status, data};\n};\n","export default __webpack_public_path__ + \"static/media/location.0b7d98ab.svg\";","import React from 'react';\nimport { CustomersInCity } from 'portfolio-domain';\nimport {Link} from 'react-router-dom';\nimport location from '../../../assets/img/location.svg';\n\nexport const TotalInCity = ({ city, customers_total }: CustomersInCity) => (\n  <Link to={'/customers/at/' + city}>\n    <div className=\"customer-card\">\n      <div className=\"w-40\">\n        <img src={location} alt=\"Location icon\" />\n      </div>\n      <div className=\"total-in-city\">\n        <span className=\"text-indigo-500\">{city}</span><br />\n        <span>Clientes: {customers_total}</span>\n      </div>\n    </div>\n  </Link>\n);\n","import React from 'react';\nimport { BackArrow } from '../components/BackArrow';\nimport { TotalInCity } from '../components/Cards/TotalInCity';\nimport { Loading } from '../components/Loading';\nimport { useLoadAllCities } from '../hooks/load-all-cities';\n\nconst CityList = () => {\n  const {cityCustomers, loading} = useLoadAllCities();\n  return (\n    <>\n      <h2 className=\"pl-3\">\n        Cidades\n      </h2>\n      <div className=\"customer-list\" hidden={loading}>\n        {cityCustomers.map((i, indx) => (\n          <TotalInCity key={indx} {...i}/>\n        ))}\n      </div>\n      <div hidden={!loading}>\n        <Loading/>\n      </div>\n    </>\n  );\n};\n\nexport default CityList;\n","import { useEffect, useState } from 'react';\nimport { CustomersInCity } from 'portfolio-domain';\nimport { customersGroupedByCity } from '../api/customers-api';\n\nexport const useLoadAllCities = () => {\n  const [loading, setLoading] = useState(true);\n  const [cityCustomers, setCityCustomers] = useState([] as CustomersInCity[]);\n\n  useEffect(() => {\n    customersGroupedByCity()\n      .then(setCityCustomers)\n      .catch(console.error)\n      .finally(()=>setLoading(false));\n  }, []);\n\n  return {\n    cityCustomers,\n    loading\n  };\n};\n"],"sourceRoot":""}